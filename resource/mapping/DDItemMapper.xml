<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.DDItemMapper">
  <resultMap id="BaseResultMap" type="entity.DDItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="dang_price" jdbcType="DOUBLE" property="dangPrice" />
    <result column="product_num" jdbcType="INTEGER" property="productNum" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="fixed_price" jdbcType="DOUBLE" property="fixedPrice" />
    <result column="product_name" jdbcType="CHAR" property="productName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, product_id, dang_price, product_num, amount, user_id, fixed_price, 
    product_name
  </sql>
  <select id="selectByExample" parameterType="entity.DDItemCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from d_d_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from d_d_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from d_d_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.DDItemCriteria">
    delete from d_d_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.DDItem">
    insert into d_d_item (id, order_id, product_id, 
      dang_price, product_num, amount, 
      user_id, fixed_price, product_name
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{dangPrice,jdbcType=DOUBLE}, #{productNum,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, 
      #{userId,jdbcType=INTEGER}, #{fixedPrice,jdbcType=DOUBLE}, #{productName,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.DDItem">
    insert into d_d_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="dangPrice != null">
        dang_price,
      </if>
      <if test="productNum != null">
        product_num,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fixedPrice != null">
        fixed_price,
      </if>
      <if test="productName != null">
        product_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="dangPrice != null">
        #{dangPrice,jdbcType=DOUBLE},
      </if>
      <if test="productNum != null">
        #{productNum,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fixedPrice != null">
        #{fixedPrice,jdbcType=DOUBLE},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.DDItemCriteria" resultType="java.lang.Long">
    select count(*) from d_d_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update d_d_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.dangPrice != null">
        dang_price = #{record.dangPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.productNum != null">
        product_num = #{record.productNum,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.fixedPrice != null">
        fixed_price = #{record.fixedPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update d_d_item
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      dang_price = #{record.dangPrice,jdbcType=DOUBLE},
      product_num = #{record.productNum,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      user_id = #{record.userId,jdbcType=INTEGER},
      fixed_price = #{record.fixedPrice,jdbcType=DOUBLE},
      product_name = #{record.productName,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.DDItem">
    update d_d_item
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="dangPrice != null">
        dang_price = #{dangPrice,jdbcType=DOUBLE},
      </if>
      <if test="productNum != null">
        product_num = #{productNum,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fixedPrice != null">
        fixed_price = #{fixedPrice,jdbcType=DOUBLE},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.DDItem">
    update d_d_item
    set order_id = #{orderId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      dang_price = #{dangPrice,jdbcType=DOUBLE},
      product_num = #{productNum,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER},
      fixed_price = #{fixedPrice,jdbcType=DOUBLE},
      product_name = #{productName,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateProductNumById">
  update d_d_item set product_num=#{num} where id = #{itemId}
  
  </update>
</mapper>